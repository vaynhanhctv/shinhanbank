(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"/oLd":function(t,n,e){"use strict";e.r(n),e.d(n,"SdkIosModule",(function(){return m}));var a=e("ZVb+"),r=e("AeLz"),o=e("oDIj"),i=e("tyNb"),s=e("fXoL"),d=e("AQYD"),h=e("ZJmW");const c=[{path:"",component:(()=>{class t{constructor(t){this.elementRef=t,this.sdkIosMarkdown=e("Usck")(`./${localStorage.getItem("language")||"vi"}_SDKiOS.md`).default}ngAfterViewInit(){this.stripContent(),this.setHeadings()}setHeadings(){const t=[];this.elementRef.nativeElement.querySelectorAll("h3").forEach(n=>t.push(n)),this.headings=t}stripContent(){this.elementRef.nativeElement.querySelector("markdown").querySelectorAll("markdown > p:nth-child(-n + 2), #ngx-markdown, #table-of-contents + ul, #table-of-contents").forEach(t=>t.remove())}}return t.\u0275fac=function(n){return new(n||t)(s.bc(s.o))},t.\u0275cmp=s.Vb({type:t,selectors:[["app-sdk-ios"]],decls:3,vars:2,consts:[[3,"headings"],[1,"markdown"]],template:function(t,n){1&t&&(s.hc(0,"app-scrollspy-nav-layout",0),s.hc(1,"markdown",1),s.dd(2),s.gc(),s.gc()),2&t&&(s.Ec("headings",n.headings),s.Nb(2),s.ed(n.sdkIosMarkdown))},directives:[d.a,h.a],styles:["[_nghost-%COMP%]{display:block}  .markdown .heading-1{width:100%;display:block;text-align:center}  .markdown .heading-1 strong{font-size:22px!important}  .markdown .heading-3{font-weight:700;font-size:14px}  .markdown h3,   .markdown h4{font-size:14px}  .markdown table{max-width:600px;display:block;margin-top:15px;margin-bottom:15px}  .markdown table thead,   .markdown table tr{border:1px solid #000}  .markdown table thead td,   .markdown table thead th,   .markdown table tr td,   .markdown table tr th{border:1px solid #000!important;padding:5px}  .markdown table thead td,   .markdown table thead th,   .markdown table thead tr{font-weight:700;font-size:14px;color:#000!important}  .markdown strong{font-size:14px}  img.black{background:#1e1e1e}"],changeDetection:0}),t})(),pathMatch:"full"}];let l=(()=>{class t{}return t.\u0275mod=s.Zb({type:t}),t.\u0275inj=s.Yb({factory:function(n){return new(n||t)},imports:[[i.g.forChild(c)],i.g]}),t})();e("WE6N");let m=(()=>{class t{}return t.\u0275mod=s.Zb({type:t}),t.\u0275inj=s.Yb({factory:function(n){return new(n||t)},imports:[[a.a.forChild(),r.a,o.a,l]]}),t})()},"1nBl":function(t,n,e){"use strict";e.r(n),n.default='### <span class="heading-1">**SDK iOS <br> ID CARD SCANNER**</span>\n<br>\n\nDuring the integration process, if any problems arise, please reach us in **<a href="https://github.com/vnptekyc/ekyc-ios-sdk-samples" style="color: #17C48A;font-weight: 600;text-decoration: underline;" target="_blank">Github</a>**.\n\n\n### **I. Overview**\nThis document aims to describe in detail the development of iOS applications with SDK integration for VNPT eKYC. The SDK provides the following features\n- Start full flow\n- Frontpage OCR only- ocrFront\n- Backpage OCR only- ocrBack\n- Frontpage and Backpage OCR- ocrFrontAndBack\n- Face comparison only- compare\n- Face register only- addFace\n- Face verification only- verifyFace\n<br> \n\n### **II. Integration Steps**   \n### <span class="heading-3">1. Specifications</span>\n- iOS version 8.0 or newer   \n- Swift version 4 or newer \n<br> \n\n### <span class="heading-3">2. Add the library that comes with the SDK</span>   \n- **Add the directory containing the following libraries to the project:**\t\n- With SDK authentication three angles face \n    - `Alamofire.framework`   \n    - `Base58Swift.framework`   \n    - `BigInt.framework`   \n    - `ObjectMapper.framework`   \n    - `SipHash.framework`   \n    - `SWMessages.framework`   \n    - `TensorFlowLite.framework`   \nSettings for the librar **(Project -> Target -> Genneral)**  \n<img src="assets/images-doc/sdk-ios-1.jpg" width="100%" />\n<br>\n- With SDK Zoom in\n    - `WatermarkImageFramework.framework`   \n    - `TensorFlowLiteC.framework`   \nSettings for the librar **(Project -> Target -> Genneral)**  \n<img src="assets/images-doc/sdk-ios-2.png" width="100%" />\n\n### <span class="heading-3">3. Adding values in order to verify the account as follows</span>   \n**Add the directory containing the following libraries to the project:**\n- Adding in AppDelegate `AppDelegate`\n- Below is the information and tokens that customers provide to use the SDK\n  - `SaveData.shared.SDTokenKey = "`   \n  - `SaveData.shared.SDTokenId = ""`   \n  - `SaveData.shared.SDUserName =  ""`  \n  - `SaveData.shared.SDPassword = ""`   \n  - `SaveData.shared.SDAuthorization = ""`   \n- Customer\'s server URL, otherwise it will use the default of VNPT:   \n  - `SaveData.shared.BaseUrl = ""`   \n<br>\n\n### <span class="heading-3">4. Initialize SDK </span>\nTo initialize the SDK, users perform the following steps:\n- Import FinalSDK to your project\n- Inherits `CameraDelegate`\n- Initializing `CameraViewController` and setting properties\n- Data after being processed will be returned to your application via the method `getResult()`, Data are described in detail in the section returned data  \n\n```typescript\nimport UIKit   \nimport FinalSDK      \nclass ViewController: UIViewController, CameraDelegate {  \n       \n    override func viewDidLoad() {   \n        super.viewDidLoad()   \n        // Do any additional setup after loading the view.   \n    }   \n              \n    // method init, setup properties and open CameraViewController   \n    func openCameraToOCR() {   \n   \n        let objCamera = CameraRouter.createModule() as! CameraViewController \n        objCamera.cameraDelegate = self   \n           \n        objCamera.isVersion = .normal   \n        objCamera.followType = .full   \n        objCamera.isShowResult = true   \n        objCamera.isShowHelp = true   \n        objCamera.isType = .cmt   \n        objCamera.stepNow = .stepFront   \n           \n        objCamera.modalPresentationStyle = .fullScreen   \n        self.showDetailViewController(objCamera, sender: nil)   \n    }   \n}   \n   \n// MARK: - CameraDelegate  \nextension ViewController {   \n    // method delegate when SDK return value after OCR   \n    func getResult() {   \n        // \n    }   \n} \n  \n```\n<br>\n\n### **III. Camera View Controller Properties**   \n\n<table>\n<thead>\n\t<tr>\n\t\t<td>Data</td>\n\t\t<td>Type</td>\n\t\t<td>Description</td>\n\t</tr>\n</thead>\n<tbody>\n\t<tr>\n\t\t<td>isValidatePostcode</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not to authenticate the ID number with the respective city, county, and ward code. Check the rules of ID numbers. The default is \n <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowHelp</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not to display the help screen. \nThe default is <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowTrademark</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not to automatically register faces and information on the system. Conditions for implementation include:<br>\n\u2022  \tOptical character recognition (OCR) succeeds<br>     \n\u2022  \tThe functional version used is the advanced version<br>      \n\u2022  \tPortrait photos are real people, real papers<br>   \n\u2022  \tThe photo on the inside of the document matches the portrait<br>   \n\u2022  \tPortraits are not covered<br>   \nThe default is <strong>false</strong>\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckLivenessCard</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not to carry out a check of documents taken directly.\nThe default is <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckMaskFace:&nbsp;</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether to check if the captured portrait photo is covered or not\nThe default is <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isVersion</td>\n\t\t<td>VersionSdk</td>\n\t\t<td>This value determines the version of the function when using the Camera (CameraViewController) ,there are 2 versions to choose from\n<br>\n\u2022  \tnormal - basic version. Take portrait photos at an angle<br>\n\u2022  \tpro - enhanced version. Take three-dimensional portrait photos<br>\nThe default is <strong>pro</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isType</td>\n\t\t<td>TypeDocument</td>\n\t\t<td>This value determines the type of paper to use. Including 4 types:<br> \n\u2022\tcmt - ID card, Citizenship ID<br> \n\u2022\thochieu - Passport<br> \n\u2022\tbanglaixe - Driver\'s license<br> \n\u2022\tcmtquandoi - Army identity card<br> \n\u2022\tcmtganchip - Citizen Identification with chip (Only with SDK Zoom in)<br> \nThe default is <strong>Card ID</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>flowType</td>\n\t\t<td>FlowType</td>\n\t\t<td>This value determines the workflow when OCR documents and portraits, including:<br> \n\u2022\tocrFront - Only performs Photographing and OCR on the front of papers<br> \n\u2022\tocrBack - Only performs Photographing and OCR on the back of papers <br>\n\u2022\tocrFrontAndBack - Only take Photos and OCRs of the front and back of the papers (not for Passport, driver\'s license)<br>\n\u2022\tfull - Take pictures of the front of the back of a portrait photo. Perform OCR, Compare, CheckLiveness, CheckMaskFace, CheckLivenessCard, AddFace<br> \n\u2022\tcompare - Only perform Portrait photography, then compare face on paper with portrait<br> \n\u2022\taddFace - Performs portrait photography then performs Registration of information and portrait on the server<br> \n\u2022\tverifyFace - Perform portrait photography to authenticate with information on the server<br> \nThe default is <strong>full</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>languageApplication</td>\n\t\t<td>String</td>\n\t\t<td>This value identifies the language used in the SDK, which has 2 values:<br> \n\u2022\tvi - Vietnamese<br> \n\u2022\ten - English<br> \nThe default is <strong>vi</strong> </td>\n\t</tr>\n\t<tr>\n\t\t<td>inputIDVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>The value is entered to perform face authentication \nThe default is "" </td>\n\t</tr>\n\t<tr>\n\t\t<td>idTypeVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>The value is entered to perform the face authentication function, the values:<br> \n\u2022\tCARD_ID - for Identity Card, identity card<br> \n\u2022\tPASSPORT_ID - for Passport<br> \n\u2022\tDRIVER_LICENSE_ID - for Driver\'s License<br> \n\u2022\tMILITARY_ID - for Military ID<br> \nThe default is "<strong>CARD_ID</strong>" \n</td>\n\t</tr>\n\t<tr>\n\t\t<td>challengeCode</td>\n\t\t<td>String</td>\n\t\t<td>This value is used to ensure that each request (request) from the customer will not be changed. After each request, the returned data will include the value <code>challengeCode</code>.\nM\u1eb7c \u0111\u1ecbnh la\u0300 "<strong>11111</strong>"</td>\n\t</tr>\n\t<tr>\n\t\t<td>unitCustomer</td>\n\t\t<td>String</td>\n\t\t<td>This value identifies the unit name, customer name using the eKYC SDK, which is passed when initializing the CameraViewController object\nM\u1eb7c \u0111\u1ecbnh " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>resourceCustomer</td>\n\t\t<td>String</td>\n\t\t<td>This value identifies the unit source name, the customer name using the eKYC SDK, which is passed when initializing the CameraViewController object.\nDefault is " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>titleCustomer</td>\n\t\t<td>String</td>\n\t\t<td>This value determines the Additional Information for each customer, passed in when the CameraViewController object is initialized.\nThe default is " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashFrontCompareFace</td>\n\t\t<td>String</td>\n\t\t<td>This value is a code containing a human face, transmitted to compare with a designated portrait after taking a photo from SDK.\nThe default is " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>arrayItemPostCode</td>\n\t\t<td>Array&lt;PostCodeType&gt;</td>\n\t\t<td>This value is the array containing the values to check the code on the hour paper and the corresponding province, district and commune code.\nValues: [BirthPlace, RecentLocation, OriginLocation, IssuePlace]\nThe default is " "\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>objectAddFace</td>\n\t\t<td>Dictionary&lt;String, Any&gt;</td>\n\t\t<td>This value is the object containing the data, passed in to perform Face Registration (AddFace), in the following format:  \n\t\t<pre><code>\nextra_info = {\n  "user":"tester",\n  "hash_front": "&lt;hashFront&gt;",\n  "hash_rear": "&lt;hashBack",\n  "date": "&lt;dd/MM/yyyy&gt;"\n}\nobjectAddFace  = {\n  "card_id": "&lt;card_id&gt;",\n  "passport_id": "&lt;passport_id&gt;",\n  "driver_license_id": "&lt;driver_license_id&gt;",\n  "military_id": "&lt;military_id&gt;",\n  "police_id": "&lt;police_id&gt;",\n  "other_id": "&lt;other_id&gt;",\n  "fullname": "&lt;fullname&gt;",\n  "dob": "&lt;dob&gt;",\n  "gender": "&lt;gender&gt;",\n  "address": "&lt;address&gt;",\n  "hometown": "&lt;hometown&gt;",\n  "nationality": "&lt;nationality&gt;",\n  "ipfs": "&lt;ipfs&gt;",\n  "title": "&lt;title&gt;",\n  "other_type": "&lt;other_type&gt;",\n  "extra_info": extra_info,\n}</code></pre> The default is [] \n</td>\n\t</tr>\n\t<tr>\n\t\t<td>logoTrademarkName</td>\n\t\t<td>String</td>\n\t\t<td>This value is the brand image displayed at the bottom of each screen in the SDK. Only apply with SDK authenticate 3 angles face.\nThe default is<img src="assets/images-doc/power_vnpt.svg" class="black" width="200"/>\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>logoTrademarkImage</td>\n\t\t<td>UIImage</td>\n\t\t<td>This value allow to replace your trademark. Only apply with SDK Zoom in. \nThe default is<img src="assets/images-doc/power_vnpt.svg" class="black" width="200"/>\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>stepNow</td>\n\t\t<td>ProgessStep</td>\n\t\t<td>This value defines the photographic interface of a paper or a human face, including the values:<br>\n\u2022  \tstepFront \u2013 Interface for taking pictures of frontal papers<br>\n\u2022  \tstepBack \u2013 Interface for taking photos on the back side<br>\n\u2022  \tstepFace \u2013 Interface for photographing human faces<br>\n\u2022  \tstepQRCode \u2013 Interface for scan QR Code of Citizen Identification with Chip (Only SDK Zoom in)<br>\nThe default is <strong>.stepFront</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowRotateCamera</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines the display of the function button that rotates the front camera to the rear camera.\nThe default is <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isWantRotateCameraBack</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines the use of the front or rear camera when photographing human faces. \nThe default is <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCustomize</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether the interface modification is at the customer\'s disposal.  \nThe default is <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCompare</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether the comparison of portrait faces in papers and human faces is performed\nThe default is <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckLivenessFace</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not to perform a liveness face image check. \nThe default is <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckMaskFace</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether or not a face-check is performed when taking a photo of a person\'s face. \nThe default is <strong>true</strong> </td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonTitleColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>This value determines the color of the "Capture" button on the Image Display screen\nThe default is <strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonReTakeColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>This value determines the color of the guide image background, the button background color on the Image Display screen.\nThe default is <strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonBackgroundColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>This value determines the background color of the guide image, and the background color of the buttons in the Image display screen. \nThe default is <strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isSkipVoiceVideo</td>\n\t\t<td>Bool</td>\n\t\t<td>This value determines whether to run through the audio and video tutorials before performing portrait verification. \nThe default is <strong>false</strong></td>\n\t</tr>\n\t</tbody>\n</table>\n<br>\n\n### **IV. SDK output results**  \n### <span class="heading-3">1. Data returned after completion will look like this</span>   \n```typescript\n1.\tfunc getResult() {   \n2.\t  print("getResult():")   \n3.\t  print("JsonInfo: \\(SaveData.shared.jsonInfo)")   \n4.\t  print("JsonCompareFace: \\(SaveData.shared.jsonCompareFace)")   \n5.\t  print("JsonLiveness: \\(SaveData.shared.jsonLiveness)")   \n6.\t  print("JsonVerifyFace: \\(SaveData.shared.jsonVerifyFace)")   \n7.\t  print("JsonAddFace: \\(SaveData.shared.jsonAddFace)")   \n8.\t}\n```\n**In Which**\n\n<table>\n<thead>\n\t<tr>\n\t\t<td>Data</td>\n\t\t<td>Typeu</td>\n\t\t<td>Descriptio</td>\n\t</tr>\n</thead>\n<tbody>\n\t<tr>\n\t\t<td>jsonInfo</td>\n\t\t<td>String</td>\n\t\t<td>Value after extracting data information.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCompareFace</td>\n\t\t<td>String</td>\n\t\t<td>Value after comparing face portrait photos on paper and portrait photos.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonLivenessFace</td>\n\t\t<td>String</td>\n\t\t<td>Whether the result of the inspection of portraits is taken directly (Real Person). </td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>The value of the face authentication results with the imported paper.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckMask</td>\n\t\t<td>String</td>\n\t\t<td>The value of the results of the inspection of portraits is masked or not.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckLivenessFrontCard</td>\n\t\t<td>String</td>\n\t\t<td>The value of the test results of paper images taken directly or not. </td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckLivenessBackCard</td>\n\t\t<td>String</td>\n\t\t<td>The value of the test results of paper images taken directly or not.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonAddFace</td>\n\t\t<td>String</td>\n\t\t<td>The value of the face registration results on the system.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonSearchFace</td>\n\t\t<td>String</td>\n\t\t<td>Face search value is returned from the system.</td>\n\t</tr>\n\t<tr>\n\t\t<td>json3DLiveness</td>\n\t\t<td>String</td>\n\t\t<td>Whether the result of the inspection of 3D portraits is taken directly (Real Person). Only wih SDK Zoom in</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFront</td>\n\t\t<td>UIImage</td>\n\t\t<td>Front image result.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageBack</td>\n\t\t<td>UIImage</td>\n\t\t<td>Back image result.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFace</td>\n\t\t<td>UIImage</td>\n\t\t<td>Portrait image result.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageNear</td>\n\t\t<td>UIImage</td>\n\t\t<td>Near portrait image result.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFar</td>\n\t\t<td>UIImage</td>\n\t\t<td>Far portrait image result.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFront</td>\n\t\t<td>String</td>\n\t\t<td>Hash of front document</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageBack</td>\n\t\t<td>String</td>\n\t\t<td>Hash of back document</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFace</td>\n\t\t<td>String</td>\n\t\t<td>Hash of face selfie</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageNear</td>\n\t\t<td>String</td>\n\t\t<td>Hash of face when near the phone</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFar</td>\n\t\t<td>String</td>\n\t\t<td>Hash of face when far the phone</td>\n\t</tr>\n</tbody>\n</table>\n\n### **V. Start the SDK**\n### <span class="heading-3">1. Start full flow</span>\n- Step 1: Take pictures of the front side. \n- Step 2: Take pictures on the back. \n- Step 3: Take a portrait of the owner of the paper. \n- Step 4: After performing OCR to get information.\nNotes: \n   - For Passport and Driver\'s License, only steps 1, 3 and 4 will be omitted\n   - Using the basic version (normal) or advanced (pro) will display different screen portrait photography interface \n\nInformation will be returned to your application via delegate getResult (), in the case of selecting isShowResult = true, the Personal Information screen will be displayed and vice versa.\n\n\nCode format:  \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR lu\u1ed3ng \u0111\u1ea7y \u0111\u1ee7: Ch\u1ee5p gi\u1ea5y t\u1edd v\xe0 \u1ea3nh ch\xe2n dung\nfunc showNormal() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal //  ho\u1eb7c .pro\n    objCamera.flowType = .full\n    objCamera.isType = .cmt // ho\u1eb7c .hochieu, .banglaixe, .cmtquandoi\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFront\n    \n    // objCamera.arrayItemPostCode = [] as Array<PostCodeType>\n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    \n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">2. Front page OCR only- ocrFront</span>\n- Step 1: Carry out the front-facing shooting\n- Step 2: After performing OCR to get front information.\n\nInformation will be returned to your application via delegate getResult (), in the case of selecting isShowResult = true, the Personal Information screen will be displayed and vice versa. \n\nCode format:   \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t tr\u01b0\u1edbc gi\u1ea5y t\u1edd\nfunc ocrFront() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    objCamera.isVersion = .pro\n    objCamera.flowType = .ocrFront\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFront\n    \n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```   \n<br>\n\n### <span class="heading-3">3. Back page OCR only- ocrBack</span>\n- Step 1: Take the photo on the back\n- Step 2: After performing OCR to get back side information.\n\nInformation will be returned to your application via `delegate getResult()`, in the case of selecting `isShowResult = true` the Personal Information screen will be displayed and vice versa.\n\nCode format:   \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t sau gi\u1ea5y t\u1edd\n    func ocrBack() {\n\n        let objCamera = CameraRouter.createModule() as! CameraViewController\n        objCamera.isVersion = .pro\n        objCamera.flowType = .ocrBack\n        objCamera.isType = self.selectedType\n        objCamera.cameraDelegate = self\n        objCamera.stepNow = .stepBack\n        \n        objCamera.unitCustomer = ""\n        objCamera.challengeCode = ""\n        \n        objCamera.isShowResult = false\n        objCamera.isShowHelp = true\n        objCamera.isShowTrademark = true\n        objCamera.isCheckLivenessCard = true\n        objCamera.isCheckMaskFace = true\n        objCamera.isAddFace = true\n        objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n        \n        objCamera.logoTrademarkName = ""\n        objCamera.modalPresentationStyle = .fullScreen\n        self.showDetailViewController(objCamera, sender: nil)\n    }\n```\n<br>\n\n### <span class="heading-3">4. Frontpage and Backpage OCR- ocrFrontAndBack</span>\n- Step 1: Carry out the front-facing shooting\n- Step 2: Take pictures on the back\n- Step 3: After performing OCR to get paper information.\n\nInformation will be returned to your application via `delegate getResult()`, in the case of selecting `isShowResult = true` the Personal Information screen will be displayed and vice versa.\n\nCode format:  \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t tr\u01b0\u1edbc v\xe0 m\u1eb7t sau gi\u1ea5y t\u1edd\nfunc ocrFrontAndBack() {\n   \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    objCamera.isVersion = .pro\n    objCamera.flowType = .ocrFrontAndBack\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    \n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```\n<br>\n\n### <span class="heading-3">5. Face comparison only - compare</span>\n- Step 1: Take pictures of the front, papers containing portrait photos  \n- Step 2: Take photos of portraits of paper owners  \n- Step 3: Make a comparison of portrait photos and face photos in papers.  \n\nInformation will be returned to your application via the delegate `getResult()` method\nCode format:  \n```typescript\n // th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung sau \u0111\xf3 s\u1ebd so s\xe1nh v\u1edbi m\xe3 hash \u1ea3nh gi\u1ea5y t\u1edd ch\u1ee9a m\u1eb7t ng\u01b0\u1eddi\nfunc showCompare(hashFront: String) {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal // ho\u1eb7c .pro cho vi\u1ec7c quay m\u1eb7t 3 h\u01b0\u1edbng\n    objCamera.flowType = .compare\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFace\n    \n    objCamera.unitCustomer = ""\n    objCamera.resourceCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.hashFrontCompareFace = hashFront\n\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = false\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">6. Face register only \u2013 addFace</span>\n- Step 1: Enter the personal information `objectAddFace`\n- Step 2: Take portrait photos\n- Step 3: Register the personal information with photos.\n\nInformation will be returned to your application via the delegate `getResult()` method\nCode format:   \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung sau \u0111\xf3 s\u1ebd \u0111\u0103ng k\xfd th\xf4ng tin l\xean h\u1ec7 th\u1ed1ng\n// ri\xeang ph\u1ea7n objCamera.customerInformationAddFace ph\u1ea3i \u0111\u1ea3m b\u1ea3o \u0111\u1ee7 c\xe1c key cho object nh\u01b0 d\u01b0\u1edbi \u0111\xe2y (tham kh\u1ea3o ph\u01b0\u01a1ng th\u1ee9c: convertDetailModelToObject)\n/*\n [\n     "card_id": card_id,\n     "passport_id": passport_id,\n     "driver_license_id": driver_license_id,\n     "military_id": military_id,\n     "police_id": police_id,\n     "other_id": other_id,\n     "fullname": fullname,\n     "dob": dob,\n     "gender": gender,\n     "address": address,\n     "hometown": hometown,\n     "nationality": nationality,\n     "ipfs": ipfs,\n     "title": title,\n     "other_type": other_type,\n     "extra_info": extra_info,\n ] as Dictionary<String, Any>\n */\n    \nfunc callAddFaceCamera() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal\n    objCamera.flowType = .addFace\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFace\n    \n    objCamera.unitCustomer = ""\n    objCamera.resourceCustomer = ""\n    objCamera.challengeCode = ""\n    \n    var customerInformation: Dictionary<String, Any>?\n    \n    objCamera.customerInformationAddFace = customerInformation\n    objCamera.hashFrontCompareFace = hashFront\n\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">7. Face verification only \u2013 verifyFace</span>\n- Step 1: Enter the serial number to perform authentication\n- Step 2: Take portrait photos\n- Step 3: Then perform information and portrait authentication.\n\nInformation will be returned to your application via the delegate `getResult()` method \nCode format:   \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung => m\xe3 hash, sau \u0111\xf3 d\xf9ng ID nh\u1eadp v\xe0o v\xe0 m\xe3 hash \u0111\u1ec3 x\xe1c th\u1ef1c khu\xf4n m\u1eb7t\nfunc verifyFaceNormal(verifyID: String) -> Void {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.cameraDelegate = self\n            \n    objCamera.isVersion = .normal\n    objCamera.flowType = .verifyFace\n    objCamera.stepNow = .stepFace\n    objCamera.inputIDVerifyFace = verifyID\n    objCamera.idTypeVerifyFace = self.getTypeId(selectedType: self.selectedType)\n    \n    objCamera.isType = self.selectedType\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n\n    objCamera.logoTrademarkName = ""\n    \n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```\n<br>\n\n### **VI. Errors**  \n### <span class="heading-3">1. Can\u2019t add Swift library to Project Object C</span>  \n- Description : When running Xcode application build error `Framework not Found` appears\n- Solution : Go to **Build Setting** and reset the parameter *Always Embed Swift Standard Libraries: Yes*  \n<br>\n\n### <span class="heading-3">2. Failed to verify bitcode</span>  \n- Description : When upload application to APPLE STORE. Xcode notify error `Failed to verify bitcode`   \n- Solution : Uncheck **rebuild for bitcode** in **complie** upload application to marketplace. \n<br>\n\n### <span class="heading-3">3. Error A valid provisioning profile for this executable was not found</span>  \n- Description :  \n<br>\n<img src="assets/images-doc/sdk-ios-bug-1.png" width="100%" />  \n<br>\n- Solution: Go into **Project Settings** build with **Leagcy Build System**. Choose: **File -> Project Settings... -> Build System -> Legacy Build System**.\n<br>\n\n### <span class="heading-3">4. Can\u2019t find SDK when building test with Simulator</span>  \n- Description : When running debug mode with Simulator xcode error SDK not found\n- Solution: Plug the actual device into the debugger.  \n<br>\n\n### <span class="heading-3">5. File was built for arm64 which is not the architecture being linked armv7</span>  \n- Description : When public the build to App Store, error `File was built for arm64 which is not the architecture being linked (armv7))`.  \n- Solution : Go to Build Setting and remove the error lines in **Valid Architecture**.   \n<br>\n\n### <span class="heading-3">6. Error of adding library when using Object-C:</span>  \n- Solution: When using `Object-C`  to develop the application. With the `Tensorfolow` library then only add `TensorFlowLiteC.framework`\n'},"4jee":function(t,n,e){"use strict";e.r(n),n.default='### <span class="heading-1">**T\xc0I LI\u1ec6U H\u01af\u1edaNG D\u1eaaN T\xcdCH H\u1ee2P SDK iOS <br> ID CARD SCANNER**</span>\n<br>\n\nTrong qu\xe1 tr\xecnh t\xedch h\u1ee3p n\u1ebfu ph\xe1t sinh v\u1ea5n \u0111\u1ec1, xin vui l\xf2ng trao \u0111\u1ed5i t\u1ea1i **<a href="https://github.com/vnptekyc/ekyc-ios-sdk-samples" style="color: #17C48A;font-weight: 600;text-decoration: underline;" target="_blank">Github</a>**.\n\n\n### **I. T\u1ed5ng quan**\nT\xe0i li\u1ec7u n\xe0y nh\u1eb1m m\u1ee5c \u0111\xedch m\xf4 ta\u0309 chi ti\u1ebft x\xe2y d\u01b0\u0323ng \u1ee9ng d\u1ee5ng iOS t\xedch h\u1ee3p SDK cho VNPT eKYC. B\u1ed9 SDK cung c\u1ea5p nh\u1eefng t\xednh n\u0103ng sau\n- Lu\u1ed3ng \u0111\u1ea7y \u0111\u1ee7 - Full flow\n- Lu\u1ed3ng OCR m\u1eb7t tr\u01b0\u1edbc - ocrFront\n- Lu\u1ed3ng OCR m\u1eb7t sau - ocrBack\n- Lu\u1ed3ng OCR m\u1eb7t tr\u01b0\u1edbc v\xe0 m\u1eb7t sau - ocrFrontAndBack\n- Lu\u1ed3ng So s\xe1nh khu\xf4n m\u1eb7t - compare\n- Lu\u1ed3ng \u0111\u0103ng k\xfd khu\xf4n m\u1eb7t - addFace\n- Lu\u1ed3ng x\xe1c th\u1ef1c khu\xf4n m\u1eb7t - verifyFace\n<br> \n\n### **II. T\xedch h\u1ee3p th\u01b0 vi\u1ec7n SDK v\xe0o d\u1ef1 a\u0301n**   \n### <span class="heading-3">1. Y\xeau c\u1ea7u</span>\n- iOS phi\xean b\u1ea3n 8.0 tr\u1edf l\xean   \n- Swift phi\xean b\u1ea3n 4 tr\u1edf l\xean   \n<br> \n\n### <span class="heading-3">2. Th\xeam th\u01b0 vi\u1ec7n \u0111i k\xe8m SDK</span>   \n- **Th\xeam th\u01b0 m\u1ee5c c\xf3 ch\u1ee9a c\xe1c th\u01b0 vi\u1ec7n sau va\u0300o d\u01b0\u0323 \xe1n:**\t\n- \u0110\u1ed1i v\u1edbi b\u1ea3n SDK quay m\u1eb7t\n    - `Alamofire.framework`   \n    - `Base58Swift.framework`   \n    - `BigInt.framework`   \n    - `ObjectMapper.framework`   \n    - `SipHash.framework`   \n    - `SWMessages.framework`   \n    - `TensorFlowLite.framework`   \nCa\u0300i \u0111\u1eb7t cho c\xe1c th\u01b0 vi\u1ec7n **(Project -> Target -> Genneral)**  \n<img src="assets/images-doc/sdk-ios-1.jpg" width="100%" />\n<br>\n- \u0110\u1ed1i v\u1edbi b\u1ea3n SDK Zoom in\n    - `WatermarkImageFramework.framework`   \n    - `TensorFlowLiteC.framework`   \nCa\u0300i \u0111\u1eb7t cho c\xe1c th\u01b0 vi\u1ec7n **(Project -> Target -> Genneral)**  \n<img src="assets/images-doc/sdk-ios-2.png" width="100%" />\n<br>\n\n### <span class="heading-3">3. Nh\u1eadp c\xe1c th\xf4ng tin \u0111i k\xe8m</span>   \n**Th\u1ef1c hi\u1ec7n th\xeam c\xe1c gi\xe1 tr\u1ecb \u0111\u1ec3 x\xe1c th\u1ef1c t\xe0i kho\u1ea3n nh\u01b0 d\u01b0\u1edbi \u0111\xe2y:**\n- Th\u1ef1c hi\u1ec7n th\xeam \u1edf `AppDelegate`\n- D\u01b0\u1edbi \u0111\xe2y l\xe0 c\xe1c th\xf4ng tin, m\xe3 token kh\xe1ch h\xe0ng cung c\u1ea5p \u0111\u1ec3 s\u1eed d\u1ee5ng SDK\n  - `SaveData.shared.SDTokenKey = "`   \n  - `SaveData.shared.SDTokenId = ""`   \n  - `SaveData.shared.SDUserName =  ""`  \n  - `SaveData.shared.SDPassword = ""`   \n  - `SaveData.shared.SDAuthorization = ""`   \n- URL m\xe1y ch\u1ee7 c\u1ee7a kh\xe1ch h\xe0ng, n\u1ebfu kh\xf4ng s\u1ebd d\xf9ng m\u1eb7c \u0111\u1ecbnh c\u1ee7a VNPT:   \n  - `SaveData.shared.BaseUrl = ""`   \n<br>\n\n### <span class="heading-3">4. Ca\u0301ch s\u1eed d\u1ee5ng </span>\n- Import FinalSDK trong d\u01b0\u0323 \xe1n c\u1ee7a b\u1ea1n\n- K\u1ebf th\u1eeba `CameraDelegate`\n- Kh\u1edfi t\u1ea1o `CameraViewController` va\u0300 ca\u0300i \u0111\u1eb7t c\xe1c thu\u1ed9c t\xednh\n- D\u1eef li\u1ec7u sau khi \u0111\u01b0\u1ee3c x\u1eed l\xfd s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c `getResult()`, D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c m\xf4 ta\u0309 chi ti\u1ebft \u1edf ph\u1ea7n D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1   \n\n```typescript\nimport UIKit   \nimport FinalSDK      \nclass ViewController: UIViewController, CameraDelegate {  \n       \n    override func viewDidLoad() {   \n        super.viewDidLoad()   \n        // Do any additional setup after loading the view.   \n    }   \n              \n    // method init, setup properties and open CameraViewController   \n    func openCameraToOCR() {   \n   \n        let objCamera = CameraRouter.createModule() as! CameraViewController \n        objCamera.cameraDelegate = self   \n           \n        objCamera.isVersion = .normal   \n        objCamera.followType = .full   \n        objCamera.isShowResult = true   \n        objCamera.isShowHelp = true   \n        objCamera.isType = .cmt   \n        objCamera.stepNow = .stepFront   \n           \n        objCamera.modalPresentationStyle = .fullScreen   \n        self.showDetailViewController(objCamera, sender: nil)   \n    }   \n}   \n   \n// MARK: - CameraDelegate  \nextension ViewController {   \n    // method delegate when SDK return value after OCR   \n    func getResult() {   \n        // \n    }   \n} \n  \n```\n<br>\n\n### **III. Ca\u0301c thu\u1ed9c t\xednh c\u1ee7a CameraViewController**   \n\n<table>\n<thead>\n\t<tr>\n\t\t<td>Thu\u1ed9c t\xednh</td>\n\t\t<td>Ki\u1ec3u d\u1eef li\u1ec7u</td>\n\t\t<td>M\xf4 t\u1ea3</td>\n\t</tr>\n</thead>\n<tbody>\n\t<tr>\n\t\t<td>isValidatePostcode</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 x\xe1c th\u01b0\u0323c s\xf4\u0301 ID v\u1edbi ma\u0303 t\u1ec9nh tha\u0300nh, qu\xe2\u0323n huy\u1ec7n, xa\u0303 ph\u01b0\u1eddng t\u01b0\u01a1ng \u1ee9ng hay kh\xf4ng. Ki\u1ec3m tra quy t\u0103\u0301c c\u1ee7a s\xf4\u0301 ID. M\u1eb7c \u0111\u1ecbnh la\u0300 <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowHelp</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 hi\u1ec3n th\u1ecb ma\u0300n h\xecnh tr\u1ee3 gi\xfap hay kh\xf4ng. \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowTrademark</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 t\u01b0\u0323 \u0111\u1ed9ng \u0111\u0103ng k\xfd khu\xf4n m\u1eb7t va\u0300 th\xf4ng tin l\xean h\u1ec7 th\xf4\u0301ng hay kh\xf4ng. \u0110i\u1ec1u ki\u1ec7n \u0111\u1ec3 th\u01b0\u0323c hi\u1ec7n bao g\u1ed3m:<br>\n\u2022  \tNh\xe2\u0323n d\u1ea1ng k\xfd t\u01b0\u0323 quang h\u1ecdc (OCR) th\xe0nh c\xf4ng<br>     \n\u2022  \tPhi\xean ba\u0309n ch\u1ee9c n\u0103ng s\u1eed d\u1ee5ng la\u0300 phi\xean ba\u0309n n\xe2ng cao<br>      \n\u2022  \t\u1ea2nh ch\u1ee5p ch\xe2n dung la\u0300 ng\u01b0\u1eddi th\xe2\u0323t, gi\u1ea5y t\u1edd th\xe2\u0323t<br>   \n\u2022  \t\u1ea2nh m\u1eb7t trong gi\u1ea5y t\u1edd kh\u1edbp v\u1edbi a\u0309nh ch\u1ee5p ch\xe2n dung<br>   \n\u2022  \t\u1ea2nh ch\u1ee5p ch\xe2n dung kh\xf4ng b\u1ecb che<br>   \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>false</strong>\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckLivenessCard</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ki\u1ec3m tra gi\u1ea5y t\u1edd \u0111\u01b0\u1ee3c ch\u1ee5p tr\u1ef1c ti\u1ebfp hay kh\xf4ng.\nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckMaskFace:&nbsp;</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh c\xf3 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ki\u1ec3m tra a\u0309nh ch\xe2n dung \u0111\u01b0\u1ee3c ch\u1ee5p c\xf3 b\u1ecb che m\u1eb7t hay kh\xf4ng.\nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isVersion</td>\n\t\t<td>VersionSdk</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh phi\xean ba\u0309n ch\u1ee9c n\u0103ng khi s\u1eed d\u1ee5ng M\xe1y a\u0309nh (CameraViewController), c\xf3 2 phi\xean ba\u0309n l\u01b0\u0323a ch\u1ecdn<br>\n\u2022  \tnormal \u2013 phi\xean ba\u0309n c\u01a1 ba\u0309n. Ch\u1ee5p a\u0309nh ch\xe2n dung m\u1ed9t g\xf3c \u0111\u1ed9<br>\n\u2022  \tpro \u2013 phi\xean ba\u0309n n\xe2ng cao. Ch\u1ee5p a\u0309nh ch\xe2n dung ba g\xf3c \u0111\u1ed9<br>\nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>pro</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isType</td>\n\t\t<td>TypeDocument</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh ki\u1ec3u gi\u1ea5y t\u1edd \u0111\u1ec3 s\u1eed d\u1ee5ng. Bao g\u1ed3m 4 lo\u1ea1i:<br> \n\u2022\tcmt \u2013 Ch\u1ee9ng minh th\u01b0 nh\xe2n d\xe2n, C\u0103n c\u01b0\u1edbc c\xf4ng d\xe2n<br> \n\u2022\thochieu \u2013 H\u1ed9 chi\u1ebfu<br> \n\u2022\tbanglaixe \u2013 Gi\u1ea5y phe\u0301p l\xe1i xe<br> \n\u2022\tcmtquandoi \u2013 Ch\u1ee9ng minh th\u01b0 qu\xe2n \u0111\u1ed9i<br> \n\u2022\tcmtganchip - C\u0103n c\u01b0\u1edbc c\xf4ng d\xe2n g\u1eafn chip. (Ch\u1ec9 c\xf3 trong SDK Zoom in)<br> \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>cmt</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>flowType</td>\n\t\t<td>FlowType</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c lu\u1ed3ng la\u0300m vi\u1ec7c khi OCR gi\u1ea5y t\u1edd va\u0300 a\u0309nh ch\xe2n dung, bao g\u1ed3m:<br> \n\u2022\tocrFront \u2013 Ch\u1ec9 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c Ch\u1ee5p a\u0309nh va\u0300 OCR m\u1eb7t tr\u01b0\u1edbc gi\u1ea5y t\u1edd<br> \n\u2022\tocrBack \u2013 Ch\u1ec9 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c Ch\u1ee5p a\u0309nh va\u0300 OCR m\u1eb7t sau gi\u1ea5y t\u1edd <br>\n\u2022\tocrFrontAndBack \u2013 Ch\u1ec9 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c Ch\u1ee5p a\u0309nh va\u0300 OCR m\u1eb7t tr\u01b0\u1edbc va\u0300 m\u1eb7t sau gi\u1ea5y t\u1edd (kh\xf4ng d\xf9ng cho H\u1ed9 chi\u1ebfu, b\u1eb1ng l\xe1i xe)<br>\n\u2022\tfull \u2013 Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c Ch\u1ee5p a\u0309nh m\u1eb7t tr\u01b0\u1edbc  m\u1eb7t sau gi\u1ea5y t\u1edd  ch\u1ee5p a\u0309nh ch\xe2n dung. Th\u01b0\u0323c hi\u1ec7n OCR, Compare, CheckLiveness, CheckMaskFace,  CheckLivenessCard, AddFace<br> \n\u2022\tcompare \u2013 Ch\u1ec9 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c Ch\u1ee5p a\u0309nh ch\xe2n dung, sau \u0111\xf3 th\u01b0\u0323c hi\u1ec7n so s\xe1nh m\u1eb7t \u1edf gi\u1ea5y t\u1edd v\u1edbi a\u0309nh ch\xe2n dung<br> \n\u2022\taddFace \u2013 Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p a\u0309nh ch\xe2n dung sau \u0111\xf3 th\u01b0\u0323c hi\u1ec7n \u0110\u0103ng k\xfd th\xf4ng tin va\u0300 a\u0309nh ch\xe2n dung l\xean m\xe1y ch\u1ee7<br> \n\u2022\tverifyFace \u2013 Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p a\u0309nh ch\xe2n dung \u0111\u1ec3 x\xe1c th\u01b0\u0323c v\u1edbi th\xf4ng tin tr\xean m\xe1y ch\u1ee7<br> \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>full</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>languageApplication</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh ng\xf4n ng\u1eef \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong SDK, c\xf3 2 gi\xe1 tr\u1ecb:<br> \n\u2022\tvi \u2013 Ti\u1ebfng Vi\u1ec7t<br> \n\u2022\ten \u2013 Ti\u1ebfng Anh<br> \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>vi</strong> </td>\n\t</tr>\n\t<tr>\n\t\t<td>inputIDVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c nh\xe2\u0323p va\u0300o \u0111\u1ec3 th\u01b0\u0323c hi\u1ec7n ch\u1ee9c n\u0103ng x\xe1c th\u01b0\u0323c khu\xf4n m\u1eb7t \nM\u1eb7c \u0111\u1ecbnh la\u0300 " " </td>\n\t</tr>\n\t<tr>\n\t\t<td>idTypeVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c nh\xe2\u0323p va\u0300o \u0111\u1ec3 th\u01b0\u0323c hi\u1ec7n ch\u1ee9c n\u0103ng x\xe1c th\u01b0\u0323c khu\xf4n m\u1eb7t, c\xe1c gi\xe1 tr\u1ecb:<br> \n\u2022\tCARD_ID \u2013 \u0111\xf4\u0301i v\u1edbi Ch\u1ee9ng minh th\u01b0 nh\xe2n d\xe2n, the\u0309 c\u0103n c\u01b0\u1edbc<br> \n\u2022\tPASSPORT_ID \u2013 \u0111\xf4\u0301i v\u1edbi H\u1ed9 chi\u1ebfu<br> \n\u2022\tDRIVER_LICENSE_ID \u2013 \u0111\xf4\u0301i v\u1edbi B\u1eb1ng l\xe1i xe<br> \n\u2022\tMILITARY_ID \u2013 \u0111\xf4\u0301i v\u1edbi Ch\u1ee9ng minh th\u01b0 qu\xe2n \u0111\u1ed9i<br> \nM\u1eb7c \u0111\u1ecbnh la\u0300 "<strong>CARD_ID</strong>" \n</td>\n\t</tr>\n\t<tr>\n\t\t<td>challengeCode</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y d\xf9ng \u0111\u1ec3 \u0111a\u0309m ba\u0309o m\xf4\u0303i y\xeau c\u1ea7u (request) t\u1eeb ph\xeda kh\xe1ch ha\u0300ng s\u1ebd kh\xf4ng b\u1ecb thay \u0111\xf4\u0309i. Sau m\xf4\u0303i request, d\u1eef li\u1ec7u tra\u0309 v\u1ec1 s\u1ebd bao g\u1ed3m gi\xe1 tr\u1ecb <code>challengeCode</code>.\nM\u1eb7c \u0111\u1ecbnh la\u0300 "<strong>11111</strong>"</td>\n\t</tr>\n\t<tr>\n\t\t<td>unitCustomer</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh t\xean \u0111\u01a1n v\u1ecb, t\xean kh\xe1ch ha\u0300ng s\u1eed d\u1ee5ng SDK eKYC, \u0111\u01b0\u1ee3c truy\u1ec1n va\u0300o khi kh\u1edfi t\u1ea1o \u0111\xf4\u0301i t\u01b0\u1ee3ng CameraViewController\nM\u1eb7c \u0111\u1ecbnh " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>resourceCustomer</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh t\xean ngu\u1ed3n \u0111\u01a1n v\u1ecb, t\xean kh\xe1ch ha\u0300ng s\u1eed d\u1ee5ng SDK eKYC, \u0111\u01b0\u1ee3c truy\u1ec1n va\u0300o khi kh\u1edfi t\u1ea1o \u0111\xf4\u0301i t\u01b0\u1ee3ng CameraViewController\nM\u1eb7c \u0111\u1ecbnh " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>titleCustomer</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh Th\xf4ng tin b\u1ed5 sung theo t\u1eebng kh\xe1ch h\xe0ng, \u0111\u01b0\u1ee3c truy\u1ec1n va\u0300o khi kh\u1edfi t\u1ea1o \u0111\xf4\u0301i t\u01b0\u1ee3ng CameraViewController\nM\u1eb7c \u0111\u1ecbnh " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashFrontCompareFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y l\xe0 m\xe3 \u1ea3nh ch\u1ee9a m\u1eb7t ng\u01b0\u1eddi, \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o \u0111\u1ec3 so s\xe1nh v\u1edbi \u1ea3nh ch\xe2n dung sau khi ch\u1ee5p \u1ea3nh t\u1eeb SDK.\nM\u1eb7c \u0111\u1ecbnh " "</td>\n\t</tr>\n\t<tr>\n\t\t<td>arrayItemPostCode</td>\n\t\t<td>Array&lt;PostCodeType&gt;</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y l\xe0 m\u1ea3ng ch\u1ee9a c\xe1c gi\xe1 tr\u1ecb \u0111\u1ec3 ki\u1ec3m tra m\xe3 s\u1ed1 tr\xean gi\u1ea5y gi\u1edd v\xe0 m\xe3 t\u1ec9nh th\xe0nh, qu\u1eadn huy\u1ec7n, x\xe3 ph\u01b0\u1eddng t\u01b0\u01a1ng \u1ee9ng.\nC\xe1c gi\xe1 tr\u1ecb: [BirthPlace, RecentLocation, OriginLocation, IssuePlace]\nM\u1eb7c \u0111\u1ecbnh " "\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>objectAddFace</td>\n\t\t<td>Dictionary&lt;String, Any&gt;</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y l\xe0 \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a d\u1eef li\u1ec7u, \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o \u0111\u1ec3 th\u1ef1c hi\u1ec7n \u0110\u0103ng k\xfd khu\xf4n m\u1eb7t (AddFace), theo \u0111\u1ecbnh d\u1ea1ng sau:  \n\t\t<pre><code>\nextra_info = {\n  "user":"tester",\n  "hash_front": "&lt;hashFront&gt;",\n  "hash_rear": "&lt;hashBack",\n  "date": "&lt;dd/MM/yyyy&gt;"\n}\nobjectAddFace  = {\n  "card_id": "&lt;card_id&gt;",\n  "passport_id": "&lt;passport_id&gt;",\n  "driver_license_id": "&lt;driver_license_id&gt;",\n  "military_id": "&lt;military_id&gt;",\n  "police_id": "&lt;police_id&gt;",\n  "other_id": "&lt;other_id&gt;",\n  "fullname": "&lt;fullname&gt;",\n  "dob": "&lt;dob&gt;",\n  "gender": "&lt;gender&gt;",\n  "address": "&lt;address&gt;",\n  "hometown": "&lt;hometown&gt;",\n  "nationality": "&lt;nationality&gt;",\n  "ipfs": "&lt;ipfs&gt;",\n  "title": "&lt;title&gt;",\n  "other_type": "&lt;other_type&gt;",\n  "extra_info": extra_info,\n}</code></pre>  M\u1eb7c \u0111\u1ecbnh [] \n</td>\n\t</tr>\n\t<tr>\n\t\t<td>logoTrademarkName</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y la\u0300 a\u0309nh th\u01b0\u01a1ng hi\u1ec7u \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb cu\xf4\u0301i m\xf4\u0303i ma\u0300n h\xecnh trong SDK. \xc1p d\u1ee5ng v\u1edbi SDK Xoay m\u1eb7t 3 g\xf3c \u0111\u1ed9.\nM\u1eb7c \u0111\u1ecbnh<img src="assets/images-doc/power_vnpt.svg" class="black" width="200"/>\n</td>\n\t</tr>\n\t<tr>\n\t\t<td>logoTrademarkImage</td>\n\t\t<td>UIImage</td>\n\t\t<td>Gi\xe1 tr\u1ecb cho ph\xe9p thay th\u1ebf logo th\u01b0\u01a1ng hi\u1ec7u. \xc1p d\u1ee5ng v\u1edbi SDK Zoom in.\n\t\tM\u1eb7c \u0111\u1ecbnh l\xe0 <img src="assets/images-doc/power_vnpt.svg" class="black" width="200"/></td>\n\t</tr>\n\t<tr>\n\t\t<td>stepNow</td>\n\t\t<td>ProgessStep</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh giao di\u1ec7n ch\u1ee5p a\u0309nh gi\u1ea5y t\u1edd ho\u1eb7c m\u1eb7t ng\u01b0\u1eddi, bao g\u1ed3m c\xe1c gi\xe1 tr\u1ecb:<br>\n\u2022  \tstepFront \u2013 Giao di\u1ec7n ch\u1ee5p a\u0309nh gi\u1ea5y t\u1edd m\u1eb7t tr\u01b0\u1edbc<br>\n\u2022  \tstepBack \u2013 Giao di\u1ec7n ch\u1ee5p a\u0309nh gi\u1ea5y t\u1edd m\u1eb7t sau<br>\n\u2022  \tstepFace \u2013 Giao di\u1ec7n ch\u1ee5p a\u0309nh m\u1eb7t ng\u01b0\u1eddi<br>\n\u2022  \tstepQRCode \u2013 Giao di\u1ec7n qu\xe9t m\xe3 QR tr\xean c\u0103n c\u01b0\u1edbc c\xf4ng d\xe2n g\u1eafn chip. (Ch\u1ec9 \xe1p d\u1ee5ng SDK Zoom in)<br>\nM\u1eb7c \u0111\u1ecbnh <strong>.stepFront</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isShowRotateCamera</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c hi\u1ec3n th\u1ecb n\xfat b\u1ea5m ch\u1ee9c n\u0103ng xoay m\xe1y \u1ea3nh tr\u01b0\u1edbc sang m\xe1y \u1ea3nh sau.\nM\u1eb7c \u0111\u1ecbnh <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isWantRotateCameraBack</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c s\u1eed d\u1ee5ng m\xe1y a\u0309nh ph\xeda tr\u01b0\u1edbc ho\u1eb7c ph\xeda sau khi ch\u1ee5p a\u0309nh m\u1eb7t ng\u01b0\u1eddi. \nM\u1eb7c \u0111\u1ecbnh <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCustomize</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c ch\u1ec9nh s\u1eeda giao di\u1ec7n theo \xfd kh\xe1ch h\xe0ng hay kh\xf4ng. \nM\u1eb7c \u0111\u1ecbnh <strong>false</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCompare</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 th\u01b0\u0323c hi\u1ec7n so s\xe1nh khu\xf4n m\u1eb7t ch\xe2n dung trong gi\u1ea5y t\u1edd va\u0300 m\u1eb7t ng\u01b0\u1eddi \nM\u1eb7c \u0111\u1ecbnh <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckLivenessFace</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 th\u01b0\u0323c hi\u1ec7n ki\u1ec3m tra a\u0309nh m\u1eb7t ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ch\u1ee5p tr\u01b0\u0323c ti\u1ebfp hay kh\xf4ng. \nM\u1eb7c \u0111\u1ecbnh <strong>true</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isCheckMaskFace</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ki\u1ec3m tra che m\u1eb7t khi ch\u1ee5p a\u0309nh m\u1eb7t ng\u01b0\u1eddi hay kh\xf4ng. \nM\u1eb7c \u0111\u1ecbnh <strong>true</strong> </td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonTitleColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh ma\u0300u n\xfat b\u1ea5m \u201cCh\u1ee5p l\u1ea1i\u201d \u1edf ma\u0300n h\xecnh Hi\u1ec3n th\u1ecb a\u0309nh \nM\u1eb7c \u0111\u1ecbnh <strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonReTakeColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh ma\u0300u n\u1ec1n a\u0309nh h\u01b0\u1edbng d\u1eabn, ma\u0300u n\u1ec1n n\xfat b\u1ea5m \u1edf ma\u0300n h\xecnh Hi\u1ec3n th\u1ecb a\u0309nh. \nM\u1eb7c \u0111\u1ecbnh <strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>buttonBackgroundColor</td>\n\t\t<td>UIColor</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh ma\u0300u n\u1ec1n a\u0309nh h\u01b0\u1edbng d\u1eabn, ma\u0300u n\u1ec1n n\xfat b\u1ea5m \u1edf ma\u0300n h\xecnh Hi\u1ec3n th\u1ecb a\u0309nh. \nM\u1eb7c \u0111\u1ecbnh<strong>#18D696</strong></td>\n\t</tr>\n\t<tr>\n\t\t<td>isSkipVoiceVideo</td>\n\t\t<td>Bool</td>\n\t\t<td>Gi\xe1 tr\u1ecb na\u0300y x\xe1c \u0111\u1ecbnh vi\u1ec7c c\xf3 th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ea1y h\u1ebft audio v\xe0 video h\u01b0\u1edbng d\u1eabn r\u1ed3i m\u1edbi th\u1ef1c hi\u1ec7n vi\u1ec7c ch\u1ee5p \u1ea3nh ch\xe2n dung hay kh\xf4ng. \nM\u1eb7c \u0111\u1ecbnh la\u0300 <strong>false</strong></td>\n\t</tr>\n\t</tbody>\n</table>\n<br>\n\n### **IV. D\u01b0\u0303 li\u1ec7u SDK tr\u1ea3 v\u1ec1 sau khi ho\xe0n th\xe0nh**  \n### <span class="heading-3">1. D\u01b0\u0303 li\u1ec7u \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1</span>   \n```typescript\n1.\tfunc getResult() {   \n2.\t  print("getResult():")   \n3.\t  print("JsonInfo: \\(SaveData.shared.jsonInfo)")   \n4.\t  print("JsonCompareFace: \\(SaveData.shared.jsonCompareFace)")   \n5.\t  print("JsonLiveness: \\(SaveData.shared.jsonLiveness)")   \n6.\t  print("JsonVerifyFace: \\(SaveData.shared.jsonVerifyFace)")   \n7.\t  print("JsonAddFace: \\(SaveData.shared.jsonAddFace)")   \n8.\t}\n```\n**Trong \u0111\xf3**\n\n<table>\n<thead>\n\t<tr>\n\t\t<td>Thu\u1ed9c t\xednh</td>\n\t\t<td>Ki\u1ec3u d\u1eef li\u1ec7u</td>\n\t\t<td>M\xf4 t\u1ea3</td>\n\t</tr>\n</thead>\n<tbody>\n\t<tr>\n\t\t<td>jsonInfo</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb sau khi b\xf3c t\xe1ch th\xf4ng tin d\u1eef li\u1ec7u gi\u1ea5y t\u1edd.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCompareFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb sau khi so s\xe1nh a\u0309nh m\u1eb7t ch\xe2n dung tr\xean gi\u1ea5y t\u1edd va\u0300 a\u0309nh ch\u1ee5p ch\xe2n dung.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonLivenessFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 vi\u1ec7c ki\u1ec3m tra a\u0309nh ch\xe2n dung c\xf3 \u0111\u01b0\u1ee3c ch\u1ee5p tr\u01b0\u0323c ti\u1ebfp hay kh\xf4ng (Ng\u01b0\u1eddi th\xe2\u0323t). </td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonVerifyFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 x\xe1c th\u01b0\u0323c khu\xf4n m\u1eb7t v\u1edbi s\xf4\u0301 gi\u1ea5y t\u1edd nh\xe2\u0323p va\u0300o.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckMask</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 ki\u1ec3m tra a\u0309nh ch\xe2n dung c\xf3 b\u1ecb che, \u0111eo kh\u1ea9u trang hay kh\xf4ng.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckLivenessFrontCard</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 ki\u1ec3m tra a\u0309nh gi\u1ea5y t\u1edd \u0111\u01b0\u1ee3c ch\u1ee5p tr\u01b0\u0323c ti\u1ebfp hay kh\xf4ng. </td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonCheckLivenessBackCard</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 ki\u1ec3m tra a\u0309nh gi\u1ea5y t\u1edd \u0111\u01b0\u1ee3c ch\u1ee5p tr\u01b0\u0323c ti\u1ebfp hay kh\xf4ng. </td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonAddFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 vi\u1ec7c \u0111\u0103ng k\xfd khu\xf4n m\u1eb7t l\xean h\u1ec7 th\xf4\u0301ng.</td>\n\t</tr>\n\t<tr>\n\t\t<td>jsonSearchFace</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb t\xecm ki\u1ebfm khu\xf4n m\u1eb7t \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 t\u1eeb h\u1ec7 th\xf4\u0301ng.</td>\n\t</tr>\n\t<tr>\n\t\t<td>json3DLiveness</td>\n\t\t<td>String</td>\n\t\t<td>Gi\xe1 tr\u1ecb k\u1ebft qua\u0309 vi\u1ec7c ki\u1ec3m tra a\u0309nh ch\xe2n dung 3D c\xf3 \u0111\u01b0\u1ee3c ch\u1ee5p tr\u01b0\u0323c ti\u1ebfp hay kh\xf4ng (Ng\u01b0\u1eddi th\xe2\u0323t). Ch\u1ec9 \xe1p d\u1ee5ng v\u1edbi SDK Zoom in</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFront</td>\n\t\t<td>UIImage</td>\n\t\t<td>\u1ea2nh m\u1eb7t tr\u01b0\u1edbc \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 sau khi ch\u1ee5p.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageBack</td>\n\t\t<td>UIImage</td>\n\t\t<td>\u1ea2nh m\u1eb7t sau \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 sau khi ch\u1ee5p.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFace</td>\n\t\t<td>UIImage</td>\n\t\t<td>\u1ea2nh ch\xe2n dung \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 sau khi ch\u1ee5p.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageNear</td>\n\t\t<td>UIImage</td>\n\t\t<td>\u1ea2nh ch\xe2n dung g\u1ea7n \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 sau khi ch\u1ee5p.</td>\n\t</tr>\n\t<tr>\n\t\t<td>imageFar</td>\n\t\t<td>UIImage</td>\n\t\t<td>\u1ea2nh ch\xe2n dung xa \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 sau khi ch\u1ee5p.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFront</td>\n\t\t<td>String</td>\n\t\t<td>M\xe3 \u1ea3nh m\u1eb7t tr\u01b0\u1edbc gi\u1ea5y t\u1edd sau khi t\u1ea3i \u1ea3nh l\xean m\xe1y ch\u1ee7.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageBack</td>\n\t\t<td>String</td>\n\t\t<td>M\xe3 \u1ea3nh m\u1eb7t sau gi\u1ea5y t\u1edd sau khi t\u1ea3i \u1ea3nh l\xean m\xe1y ch\u1ee7.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFace</td>\n\t\t<td>String</td>\n\t\t<td>M\xe3 \u1ea3nh ch\xe2n dung sau khi t\u1ea3i \u1ea3nh l\xean m\xe1y ch\u1ee7.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageNear</td>\n\t\t<td>String</td>\n\t\t<td>M\xe3 \u1ea3nh ch\xe2n dung g\u1ea7n sau khi t\u1ea3i \u1ea3nh l\xean m\xe1y ch\u1ee7.</td>\n\t</tr>\n\t<tr>\n\t\t<td>hashImageFar</td>\n\t\t<td>String</td>\n\t\t<td>M\xe3 \u1ea3nh ch\xe2n dung xa sau khi t\u1ea3i \u1ea3nh l\xean m\xe1y ch\u1ee7.</td>\n\t</tr>\n</tbody>\n</table>\n\n### **V. C\xe1c lu\u1ed3ng**\n### <span class="heading-3">1. Lu\u1ed3ng \u0111\u1ea7y \u0111\u1ee7 \u2013 full</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t tr\u01b0\u1edbc. \n- B\u01b0\u1edbc 2: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t sau. \n- B\u01b0\u1edbc 3: Ch\u1ee5p a\u0309nh ch\xe2n dung ch\u1ee7 gi\u1ea5y t\u1edd. \n- B\u01b0\u1edbc 4: Sau khi th\u01b0\u0323c hi\u1ec7n OCR \u0111\u1ec3 l\u1ea5y th\xf4ng tin. \nL\u01b0u \xfd: \n   - \u0110\xf4\u0301i v\u1edbi H\u1ed9 chi\u1ebfu va\u0300 B\u1eb1ng l\xe1i xe, s\u1ebd ch\u1ec9 c\xf3 b\u01b0\u1edbc 1, b\u01b0\u1edbc 3 va\u0300 b\u01b0\u1edbc 4. B\u1ecf qua ch\u1ee5p m\u1eb7t sau c\u1ee7a gi\u1ea5y t\u1edd \n   - S\u1eed d\u1ee5ng phi\xean ba\u0309n c\u01a1 ba\u0309n (normal) ho\u1eb7c n\xe2ng cao (pro) s\u1ebd hi\u1ec3n th\u1ecb giao di\u1ec7n ma\u0300n h\xecnh ch\u1ee5p a\u0309nh ch\xe2n dung kh\xe1c nhau \n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c delegate `getResult()`, trong tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn `isShowResult = true` th\xec ma\u0300n h\xecnh Th\xf4ng tin c\xe1 nh\xe2n s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb va\u0300 ng\u01b0\u1ee3c l\u1ea1i \n\n\nCode m\u1eabu:  \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR lu\u1ed3ng \u0111\u1ea7y \u0111\u1ee7: Ch\u1ee5p gi\u1ea5y t\u1edd v\xe0 \u1ea3nh ch\xe2n dung\nfunc showNormal() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal //  ho\u1eb7c .pro\n    objCamera.flowType = .full\n    objCamera.isType = .cmt // ho\u1eb7c .hochieu, .banglaixe, .cmtquandoi\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFront\n    \n    // objCamera.arrayItemPostCode = [] as Array<PostCodeType>\n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    \n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">2. Lu\u1ed3ng OCR m\u1eb7t tr\u01b0\u1edbc- ocrFront</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t tr\u01b0\u1edbc\n- B\u01b0\u1edbc 2: Sau khi th\u01b0\u0323c hi\u1ec7n OCR \u0111\u1ec3 l\u1ea5y th\xf4ng tin m\u1eb7t tr\u01b0\u1edbc.\n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c `delegate getResult()`, trong tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn `isShowResult = true` th\xec m\xe0n h\xecnh Th\xf4ng tin c\xe1 nh\xe2n s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb va\u0300 ng\u01b0\u1ee3c l\u1ea1i \n\nCode m\u1eabu:   \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t tr\u01b0\u1edbc gi\u1ea5y t\u1edd\nfunc ocrFront() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    objCamera.isVersion = .pro\n    objCamera.flowType = .ocrFront\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFront\n    \n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```   \n<br>\n\n### <span class="heading-3">3. Lu\u1ed3ng OCR m\u1eb7t sau- ocrBack</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t sau\n- B\u01b0\u1edbc 2: Sau khi th\u01b0\u0323c hi\u1ec7n OCR \u0111\u1ec3 l\u1ea5y th\xf4ng tin m\u1eb7t sau.\n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c `delegate getResult()`, trong tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn `isShowResult = true` th\xec m\xe0n h\xecnh Th\xf4ng tin c\xe1 nh\xe2n s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb va\u0300 ng\u01b0\u1ee3c l\u1ea1i \n\nCode m\u1eabu:   \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t sau gi\u1ea5y t\u1edd\n    func ocrBack() {\n\n        let objCamera = CameraRouter.createModule() as! CameraViewController\n        objCamera.isVersion = .pro\n        objCamera.flowType = .ocrBack\n        objCamera.isType = self.selectedType\n        objCamera.cameraDelegate = self\n        objCamera.stepNow = .stepBack\n        \n        objCamera.unitCustomer = ""\n        objCamera.challengeCode = ""\n        \n        objCamera.isShowResult = false\n        objCamera.isShowHelp = true\n        objCamera.isShowTrademark = true\n        objCamera.isCheckLivenessCard = true\n        objCamera.isCheckMaskFace = true\n        objCamera.isAddFace = true\n        objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n        \n        objCamera.logoTrademarkName = ""\n        objCamera.modalPresentationStyle = .fullScreen\n        self.showDetailViewController(objCamera, sender: nil)\n    }\n```\n<br>\n\n### <span class="heading-3">4. Lu\u1ed3ng OCR m\u1eb7t tr\u01b0\u1edbc v\xe0 m\u1eb7t sau- ocrFrontAndBack</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t tr\u01b0\u1edbc\n- B\u01b0\u1edbc 2: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p gi\u1ea5y t\u1edd m\u1eb7t sau\n- B\u01b0\u1edbc 3: Sau khi th\u01b0\u0323c hi\u1ec7n OCR \u0111\u1ec3 l\u1ea5y th\xf4ng tin gi\u1ea5y t\u1edd.\n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c `delegate getResult()`, trong tr\u01b0\u1eddng h\u1ee3p ch\u1ecdn `isShowResult = true` th\xec m\xe0n h\xecnh Th\xf4ng tin c\xe1 nh\xe2n s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb va\u0300 ng\u01b0\u1ee3c l\u1ea1i \n\nCode m\u1eabu:  \n\n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c OCR m\u1eb7t tr\u01b0\u1edbc v\xe0 m\u1eb7t sau gi\u1ea5y t\u1edd\nfunc ocrFrontAndBack() {\n   \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    objCamera.isVersion = .pro\n    objCamera.flowType = .ocrFrontAndBack\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    \n    objCamera.unitCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckLivenessCard = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```\n<br>\n\n### <span class="heading-3">5. Lu\u1ed3ng So s\xe1nh khu\xf4n m\u1eb7t- compare</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c truy\u1ec1n m\xe3 \u1ea3nh (m\xe3 hash) gi\u1ea5y t\u1edd c\xf3 ch\u1ee9a a\u0309nh ch\xe2n dung   \n- B\u01b0\u1edbc 2: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p a\u0309nh ch\xe2n dung ch\u1ee7 gi\u1ea5y t\u1edd   \n- B\u01b0\u1edbc 3: Th\u01b0\u0323c hi\u1ec7n so s\xe1nh a\u0309nh ch\xe2n dung va\u0300 a\u0309nh m\u1eb7t c\xf3 trong gi\u1ea5y t\u1edd.   \n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c delegate `getResult()`  \nCode m\u1eabu:  \n```typescript\n // th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung sau \u0111\xf3 s\u1ebd so s\xe1nh v\u1edbi m\xe3 hash \u1ea3nh gi\u1ea5y t\u1edd ch\u1ee9a m\u1eb7t ng\u01b0\u1eddi\nfunc showCompare(hashFront: String) {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal // ho\u1eb7c .pro cho vi\u1ec7c quay m\u1eb7t 3 h\u01b0\u1edbng\n    objCamera.flowType = .compare\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFace\n    \n    objCamera.unitCustomer = ""\n    objCamera.resourceCustomer = ""\n    objCamera.challengeCode = ""\n    \n    objCamera.hashFrontCompareFace = hashFront\n\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = false\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">6. Lu\u1ed3ng \u0110\u0103ng k\xfd khu\xf4n m\u1eb7t \u2013 addFace</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c nh\xe2\u0323p th\xf4ng tin c\xe1 nh\xe2n v\u1edbi d\u1eef li\u1ec7u theo \u0111\u1ecbnh d\u1ea1ng `objectAddFace`\n- B\u01b0\u1edbc 2: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p a\u0309nh ch\xe2n dung\n- B\u01b0\u1edbc 3: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c \u0111\u0103ng k\xfd th\xf4ng tin c\xe1 nh\xe2n ke\u0300m a\u0309nh.\n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c delegate `getResult()`  \nCode m\u1eabu:   \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung sau \u0111\xf3 s\u1ebd \u0111\u0103ng k\xfd th\xf4ng tin l\xean h\u1ec7 th\u1ed1ng\n// ri\xeang ph\u1ea7n objCamera.customerInformationAddFace ph\u1ea3i \u0111\u1ea3m b\u1ea3o \u0111\u1ee7 c\xe1c key cho object nh\u01b0 d\u01b0\u1edbi \u0111\xe2y (tham kh\u1ea3o ph\u01b0\u01a1ng th\u1ee9c: convertDetailModelToObject)\n/*\n [\n     "card_id": card_id,\n     "passport_id": passport_id,\n     "driver_license_id": driver_license_id,\n     "military_id": military_id,\n     "police_id": police_id,\n     "other_id": other_id,\n     "fullname": fullname,\n     "dob": dob,\n     "gender": gender,\n     "address": address,\n     "hometown": hometown,\n     "nationality": nationality,\n     "ipfs": ipfs,\n     "title": title,\n     "other_type": other_type,\n     "extra_info": extra_info,\n ] as Dictionary<String, Any>\n */\n    \nfunc callAddFaceCamera() {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.isVersion = .normal\n    objCamera.flowType = .addFace\n    objCamera.isType = self.selectedType\n    objCamera.cameraDelegate = self\n    objCamera.stepNow = .stepFace\n    \n    objCamera.unitCustomer = ""\n    objCamera.resourceCustomer = ""\n    objCamera.challengeCode = ""\n    \n    var customerInformation: Dictionary<String, Any>?\n    \n    objCamera.customerInformationAddFace = customerInformation\n    objCamera.hashFrontCompareFace = hashFront\n\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n    \n    objCamera.logoTrademarkName = ""\n    objCamera.modalPresentationStyle = .fullScreen\n    self.present(objCamera, animated: true, completion: nil)\n}\n```\n<br>\n\n### <span class="heading-3">7. Lu\u1ed3ng Xa\u0301c th\u1ef1c khu\xf4n m\u1eb7t \u2013 verifyFace</span>\n- B\u01b0\u1edbc 1: Th\u01b0\u0323c hi\u1ec7n nh\xe2\u0323p chu\xf4\u0303i s\xf4\u0301 \u0111\u1ec3 th\u01b0\u0323c hi\u1ec7n x\xe1c th\u01b0\u0323c\n- B\u01b0\u1edbc 2: Th\u01b0\u0323c hi\u1ec7n vi\u1ec7c ch\u1ee5p a\u0309nh ch\xe2n dung\n- B\u01b0\u1edbc 3: Sau \u0111\xf3 th\u01b0\u0323c hi\u1ec7n x\xe1c th\u01b0\u0323c th\xf4ng tin va\u0300 a\u0309nh ch\xe2n dung.\n\nTh\xf4ng tin s\u1ebd \u0111\u01b0\u1ee3c tra\u0309 v\u1ec1 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n th\xf4ng qua ph\u01b0\u01a1ng th\u1ee9c delegate `getResult()`   \nCode m\u1eabu:   \n```typescript\n// th\u1ef1c hi\u1ec7n vi\u1ec7c Ch\u1ee5p \u1ea3nh ch\xe2n dung => m\xe3 hash, sau \u0111\xf3 d\xf9ng ID nh\u1eadp v\xe0o v\xe0 m\xe3 hash \u0111\u1ec3 x\xe1c th\u1ef1c khu\xf4n m\u1eb7t\nfunc verifyFaceNormal(verifyID: String) -> Void {\n    \n    let objCamera = CameraRouter.createModule() as! CameraViewController\n    \n    objCamera.cameraDelegate = self\n            \n    objCamera.isVersion = .normal\n    objCamera.flowType = .verifyFace\n    objCamera.stepNow = .stepFace\n    objCamera.inputIDVerifyFace = verifyID\n    objCamera.idTypeVerifyFace = self.getTypeId(selectedType: self.selectedType)\n    \n    objCamera.isType = self.selectedType\n    objCamera.isShowResult = false\n    objCamera.isShowHelp = true\n    objCamera.isShowTrademark = true\n    objCamera.isCheckMaskFace = true\n    objCamera.isAddFace = true\n    objCamera.isCheckLivenessFace = true\n    objCamera.languageApplication = self.isVietnamese ? "vi" : "en"\n\n    objCamera.logoTrademarkName = ""\n    \n    objCamera.modalPresentationStyle = .fullScreen\n    self.showDetailViewController(objCamera, sender: nil)\n}\n```\n<br>\n\n### **VI. L\u1ed7i th\u01b0\u1eddng g\u1eb7p**  \n### <span class="heading-3">1. L\u1ed7i kh\xf4ng add \u0111\u01b0\u1ee3c th\u01b0 vi\u1ec7n Swift v\xe0o Project Object C</span>  \n- M\xf4 t\u1ea3 : Khi th\u1ef1c hi\u1ec7n build \u1ee9ng d\u1ee5ng Xcode b\xe1o l\u1ed7i `Framework not Found`  \n- C\xe1ch kh\u1eafc ph\u1ee5c : V\xe0o **Build Setting** set l\u1ea1i tham s\u1ed1 *Always Embed Swift Standard Libraries: Yes*  \n<br>\n\n### <span class="heading-3">2. L\u1ed7i Failed to verify bitcode</span>  \n- M\xf4 t\u1ea3 : Khi th\u1ef1c hi\u1ec7n \u0111\u01b0a l\xean APPLE STORE. Xcode b\xe1o l\u1ed7i `Failed to verify bitcode`   \n- C\xe1ch kh\u1eafc ph\u1ee5c : B\u1ecf t\xedch \u1edf ph\u1ea9n **rebuild for bitcode** trong ph\u1ea7n **complie** \u0111\u01b0a \u1ee9ng d\u1ee5ng l\xean ch\u1ee3. \n<br>\n\n### <span class="heading-3">3. L\u1ed7i A valid provisioning profile for this executable was not found</span>  \n- M\xf4 t\u1ea3 :  \n<br>\n<img src="assets/images-doc/sdk-ios-bug-1.png" width="100%" />  \n<br>\n- C\xe1ch kh\u1eafc ph\u1ee5c: V\xe0o trong **Project Settings** build v\u1edbi **Leagcy Build System**. Ch\u1ecdn: **File -> Project Settings... -> Build System -> Legacy Build System**.\n<br>\n\n### <span class="heading-3">4. L\u1ed7i kh\xf4ng t\xecm th\u1ea5y SDK khi build test b\u1eb1ng Simulator</span>  \n- M\xf4 t\u1ea3 : Khi ch\u1ea1y ch\xea \u0111\u1ed9 debug v\u1edbi Simulator xcode b\xe1o l\u1ed7i kh\xf4ng t\xecm th\u1ea5y SDK\n- C\xe1ch kh\u0103c ph\u1ee5c: C\u1eafm thi\u1ebft b\u1ecb th\u1eadt v\xe0o debug.  \n<br>\n\n### <span class="heading-3">5. L\u1ed7i File was built for arm64 which is not the architecture being linked armv7</span>  \n- M\xf4 t\u1ea3 : Khi build th\u1ef1c hi\u1ec7n \u0111\u1ea9y l\xean store g\u1eb7p l\u1ed7i `File was built for arm64 which is not the architecture being linked (armv7))`.  \n- C\xe1ch kh\u1eafc ph\u1ee5c : V\xe0o Build Setting b\u1ecf c\xe1c d\xf2ng m\xe1y b\xe1o l\u1ed7i trong **Valid Architecture**.   \n<br>\n\n### <span class="heading-3">6. L\u1ed7i add th\u01b0 vi\u1ec7n khi s\u1eed d\u1ee5ng Object-C:</span>  \n- C\xe1ch kh\u1eafc ph\u1ee5c: Khi s\u1eed d\u1ee5ng `Object-C` cho vi\u1ec7c ph\xe1t tri\u1ec3n \u1ee9ng d\u1ee5ng. \u0110\u1ed1i v\u1edbi th\u01b0 vi\u1ec7n `Tensorfolow` th\xec ch\u1ec9 add duy nh\u1ea5t `TensorFlowLiteC.framework`\n'},Usck:function(t,n,e){var a={"./en_SDKiOS.md":"1nBl","./vi_SDKiOS.md":"4jee"};function r(t){var n=o(t);return e(n)}function o(t){if(!e.o(a,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return a[t]}r.keys=function(){return Object.keys(a)},r.resolve=o,t.exports=r,r.id="Usck"}}]);
